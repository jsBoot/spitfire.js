!function(){"use strict";describe("Array basics test suite",function(){var monade=function(desc,obj,property){it(desc,function(){runs(function(){expect(obj[property]).not.toBeUndefined()})})};describe("Array inherits Function: properties",function(){monade("Array has property constructor",Array,"constructor"),monade("Array has property length",Array,"length")}),describe("Array inherits Function: methods",function(){monade("Array has method toString()",Array,"toString"),monade("Array has method call()",Array,"call"),monade("Array has method apply()",Array,"apply"),monade("Array has method bind()",Array,"bind"),monade("Array has method isGenerator()",Array,"isGenerator")}),describe("Array structure",function(){monade("Array has property prototype",Array,"prototype"),monade("Array has method isArray()",Array,"isArray")});var basechecks=function(exp){monade("Array instance has property constructor",exp,"constructor"),monade("Array instance has property length",exp,"length"),monade("Array instance has method hasOwnProperty()",exp,"hasOwnProperty"),monade("Array instance has method isPrototypeOf()",exp,"isPrototypeOf"),monade("Array instance has method propertyIsEnumerable()",exp,"propertyIsEnumerable"),monade("Array instance has method toLocaleString()",exp,"toLocaleString"),monade("Array instance has method toString()",exp,"toString"),monade("Array instance has method valueOf()",exp,"valueOf"),it("Array instance has property [N]",function(){runs(function(){expect(new Array("a")[0]).toEqual("a")})}),monade("Array instance has method pop",exp,"pop"),monade("Array instance has method push",exp,"push"),monade("Array instance has method reverse",exp,"reverse"),monade("Array instance has method shift",exp,"shift"),monade("Array instance has method sort",exp,"sort"),monade("Array instance has method splice",exp,"splice"),monade("Array instance has method unshift",exp,"unshift"),monade("Array instance has method concat",exp,"concat"),monade("Array instance has method join",exp,"join"),monade("Array instance has method slice",exp,"slice"),monade("Array instance has method indexOf",exp,"indexOf"),monade("Array instance has method lastIndexOf",exp,"lastIndexOf"),monade("Array instance has method filter",exp,"filter"),monade("Array instance has method forEach",exp,"forEach"),monade("Array instance has method every",exp,"every"),monade("Array instance has method map",exp,"map"),monade("Array instance has method some",exp,"some"),monade("Array instance has method reduce",exp,"reduce"),monade("Array instance has method reduceRight",exp,"reduceRight")};describe("Array instance via array constructor (base structure)",function(){basechecks(new Array)}),describe("Array instance via array constructor (base structure)",function(){basechecks(Array())}),describe("Array instance via array literal (base structure)",function(){basechecks([])}),describe("Constructor",function(){it("Constructor is consistent",function(){runs(function(){expect([].constructor).toBe((new Array).constructor)})}),it("Construction is consistent (and constructor supports both syntaxes)",function(){runs(function(){expect([1,2,3]).toEqual(new Array(1,2,3)),expect([void 0,void 0,void 0]).toEqual(new Array(3))})}),it("Array constructor supports 0 to 2^32-1 length init",function(){runs(function(){expect([]).toEqual(new Array(0)),expect(new Array(Math.pow(2,32)-1).length).toEqual(Math.pow(2,32)-1);var minify;try{minify=new Array(Math.pow(2,32)),expect(!0).toBe(!1)}catch(e){expect(e instanceof RangeError).toBe(!0)}try{minify=new Array(-1),expect(!0).toBe(!1)}catch(e){expect(e instanceof RangeError).toBe(!0)}})})}),describe("Length",function(){it("Length is consistent",function(){runs(function(){expect(["stuff"].length).toEqual(new Array("stuff").length),expect(["stuff"].length).toEqual(["stuff"].length),expect(["stuff"].length).toEqual(1)})})}),describe("Push",function(){it("Simple value",function(){runs(function(){var a=[],t=a.push("toto");expect(a.length).toEqual(t),expect(a.length).toEqual(1)})}),it("Multiple simple values",function(){runs(function(){var a=["chose"],t=a.push("toto","titi");expect(a.length).toEqual(t),expect(a.length).toEqual(3),expect(a[2]).toEqual("titi")})}),it("Undefined",function(){runs(function(){var a=[],t=a.push(void 0);expect(a.length).toEqual(t),expect(a.length).toEqual(1)})}),it("Whole set, with a one value array",function(){runs(function(){var a=["string"],t=a.push(0/0,1/0,void 0,!1,!0,-1,1,.5,"string",{},[],/a/,function(){},new function(){},new Object,new Array,new RegExp,new Function);expect(a.length).toEqual(t),expect(a.length).toEqual(19),expect("string"==a[0]),expect(a[18]==new Function)})})}),describe("Unshift",function(){it("Simple value",function(){runs(function(){var a=[],t=a.unshift("toto");expect(a.length).toEqual(t),expect(a.length).toEqual(1)})}),it("Multiple simple values",function(){runs(function(){var a=["chose"],t=a.unshift("toto","titi");expect(a.length).toEqual(t),expect(a.length).toEqual(3),expect(a[0]).toEqual("toto")})}),it("Undefined",function(){runs(function(){var a=[],t=a.unshift(void 0);expect(a.length).toEqual(t),expect(a.length).toEqual(1)})}),it("Whole set, with a one value array",function(){runs(function(){var a=["string"],t=a.unshift(0/0,1/0,void 0,!1,!0,-1,1,.5,"string",{},[],/a/,function(){},new function(){},new Object,new Array,new RegExp,new Function);expect(a.length).toEqual(t),expect(a.length).toEqual(19),expect(a[0]).toBe(0/0),expect(a[18]).toEqual("string")})})}),describe("Pop",function(){it("Simple pop",function(){runs(function(){var v="toto",k="truc",a=[v,k],t=a.pop();expect(a.length).toEqual(1),expect(t).toEqual(k)})}),it("Empty array",function(){runs(function(){var a=[],t=a.pop();expect(a.length).toEqual(0),expect(t).toEqual(void 0)})})}),describe("Shift",function(){it("Simple pop",function(){runs(function(){var v="toto",k="truc",a=[v,k],t=a.shift();expect(a.length).toEqual(1),expect(t).toEqual(v)})}),it("Empty array",function(){runs(function(){var a=[],t=a.shift();expect(a.length).toEqual(0),expect(t).toEqual(void 0)})})}),describe("Reverse",function(){it("Reversing simple array",function(){runs(function(){var v="toto",k="truc",a=[v,k],t=a.reverse();expect(a).toEqual(t),expect(a[0]).toEqual(k),expect(a[1]).toEqual(v)})}),it("Reversing empty array works",function(){runs(function(){var t=[].reverse();expect(t).toEqual([])})})}),describe("Sort",function(){it("Sorting with custom comparison callback",function(){runs(function(){var s=function(a,b){return a.length<b.length?-1:a.length>b.length?1:0},t=["deux","un"];t.sort(s),expect(t[0]).toEqual("un"),expect(t[1]).toEqual("deux")})})})})}();
//# sourceMappingURL=Array.js.map